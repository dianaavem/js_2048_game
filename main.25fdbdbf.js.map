{"version":3,"sources":["scripts/main.js"],"names":["board","score","rows","columns","body","document","querySelector","style","overflow","startButton","messageLose","messageWin","messageStart","gameScore","setGame","id","tiles","querySelectorAll","r","c","tile","toString","num","innerHTML","updateTile","setNumber","hasEmptyTile","canMove","classList","add","remove","innerText","found","Math","floor","random","getElementById","value","filterZero","row","filter","slide","i","length","push","slideLeft","slideRight","reverse","slideUp","slideDown","addEventListener","e","code"],"mappings":"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","file":"main.25fdbdbf.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\n\nconst body = document.querySelector('body');\n\nbody.style.overflow = 'hidden';\n\nconst startButton = document.querySelector('.start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst messageStart = document.querySelector('.message-start');\nconst gameScore = document.querySelector('.game-score');\n\nstartButton.addEventListener('click', () => {\n  setGame();\n\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n  startButton.innerText = 'Restart';\n\n  messageStart.classList.add('hidden');\n});\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  const field = document.querySelector('.game-field');\n\n  field.id = 'board';\n\n  const tiles = document.querySelectorAll('.field-cell');\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = tiles[r * rows + c];\n\n      tile.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      tile.innerHTML = num !== 0 ? num : '';\n\n      updateTile(tile, num);\n    }\n  }\n\n  setNumber();\n};\n\nfunction hasEmptyTile() {\n  let canMove = false;\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n\n      if (c < columns - 1 && board[r][c] === board[r][c + 1]) {\n        canMove = true;\n      }\n\n      if (r < rows - 1 && board[r][c] === board[r + 1][c]) {\n        canMove = true;\n      }\n    }\n  }\n\n  if (!canMove) {\n    messageStart.classList.add('hidden');\n    messageLose.classList.remove('hidden');\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    startButton.innerText = 'Start';\n  }\n\n  return false;\n}\n\nfunction setNumber() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      board[r][c] = 2;\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      tile.innerText = Math.random() < 0.1 ? 4 : 2;\n      tile.classList.add(`field-cell--${tile.innerText}`);\n      found = true;\n    }\n  }\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = 'field-cell';\n  tile.classList.add(`field-cell--${num}`);\n  tile.classList.add('tile');\n\n  if (num > 0) {\n    tile.innerText = num;\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n    setNumber();\n  } else if (e.code === 'ArrowRight') {\n    slideRight();\n    setNumber();\n  } else if (e.code === 'ArrowUp') {\n    slideUp();\n    setNumber();\n  } else if (e.code === 'ArrowDown') {\n    slideDown();\n    setNumber();\n  }\n});\n\nfunction filterZero(row) {\n  return row.filter(num => num !== 0);\n}\n\nfunction slide(r) {\n  let row = r;\n\n  row = filterZero(row);\n\n  for (let i = 0; i < row.length - 1; i++) {\n    if (row[i] === row[i + 1]) {\n      row[i] *= 2;\n      row[i + 1] = 0;\n      score += row[i];\n      gameScore.innerText = score;\n    }\n\n    if (row[i] === 2048) {\n      messageStart.classList.add('hidden');\n      messageWin.classList.remove('hidden');\n    }\n  }\n\n  row = filterZero(row);\n\n  while (row.length < columns) {\n    row.push(0);\n  }\n\n  return row;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n"]}